一、相关使用技巧
（1） vi进去删除全部 :%d
（2）使用yum安装时候保存下载的安装包：
    修改vi  /etc/yum.conf 为keepcache=1 

二、Shell 
  $0  打印第一个参数
  $1  打印第二个参数（以此类推）
  $?  打印上一条命令是否执行成功
  $#  打印两个参数
  $*  打印所有参数


 脚本改变颜色： echo -e "\033[32mPlease select menu follow:\033[1m"

  if 条件;then
  echo 
  elif 
  echo
  else
  fi


  for 
   expr  求和
   

vi 里面替换:%s/192/199
   sed 's/^/& /g' 1.txt   首行加空格
   sed 's/$/& /g' 1.txt   行未加空格
   sed '/wuguangke/a ####' 1.txt    在wuguangke 之后添加######
   sed '/wuguangke/i ####'  1.tx     在wuguangke之前添加######
sed 命令
grep命令
awk 命令
  cat 1.txt   |awk  '{print $2}'
  cat  /etc/passwd |awk -F : '{print $3}'  以:分割打印第三列

find . -maxdepth 1 -type f  -size +10M  -exec rm -rf {} \;


Linux 网络防火墙
   netfilter
   iptables:数据包过滤、NAT、mangle等规则生成的工具

网络：IP报文  TCP报文
  TCP 连接状态：CLOSED：没有任何连接状态-----LISTEN：侦听来自远方的TCP端口的连接请求----------ESTABLISHED：代表一个打开的连接

防火墙：工作在主机或者网络边缘，对进出的网络报文按照事先定义好的规则进行检查，一旦符合标准便按照定义的标准进行处理的一套组件。

Linux 2.2  
    ipchain/firewall
Linux  2.4
    iptables/netfilter
 
 
  源地址转换作用于出口
  目的地址装作用于入口


 防火墙5个链：
  prerouting   进入主机前
  input        进入
  output       出去
  forward      转发
  postrouting  出去之后


  防火墙4张表：
 filter(过滤）
   input  output  forword
 nat  （地址转换）
   prerouting  output  postrouting
 mangle (拆开、修改、封装)
   prerouting input  output forward postrouting
 raw (对数据包还原)
   prerouting  output

 自定义链：
  用户可以使用自定义链，但只在被调用时才发挥作用，而且如果自定义链中的任何规则匹配，还应该有返回机制。
  用户可以删除自定义的空链
  默认链不能删除


  每个规则都有两个内置的计数器：
     一个记录被匹配到的报文个数
     一个记录被匹配的报文大小之和


 写防火墙规则：匹配标准+动作
    iptables -t [表] 命令 [链 ]     匹配标准 -j[处理办法] 

  匹配标准：
    （1）通用匹配
     -s/--src 源地址
     -d/--dst 目标地址
     -p{tcp/udp}  协议
     -i interface 指定数据报文流入接口
     -o interface 指定数据报文流出接口
   （2）扩展匹配
     隐含扩展
        -p tcp
           --sport 源端口
           --dport 目标端口
          
     显式扩展
        -m state
          --state:状态扩展    
           NEW 新连接请求
           ESTABLISHED 已建立的连接
           INVALID  非法连接
           RELATED  相关联的
例如：
[root@localhost ~]# iptables -A INPUT -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
[root@localhost ~]# iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT
[root@localhost ~]# iptstate
[root@localhost ~]# iptstate
                
       multiport  多端口
         --destination-ports 22,80,3306
         --source-ports

       iprange   地址范围
         --src-range
         --dst-range
      connlimit 连接数限制
         --connlimit-above 

       limit
         --limit 速率
         --limit-burst  上限（首次进入的上限）

      string  屏蔽内容
         --algo       例如：iptables -A  OUTPUT -m string  --algo kmp --string "h7n9"  -j REJECT  禁止页面内容为h7ng的页面访问
       

   （3）-j  处理动作
      ACCEPT  允许
      DROP    丢弃
      REJECT  丢弃并通知
      LOG     记录日志信息

   命令：
     管理规则：
      -A 附加一条规则，在链的尾部新增
      -I CHAIN [Num]插入一条规则
      -D CHAIN [Num]删除一条规则 
      -R CHAIN [Num]替换指定的规则
     管理链：
      -f: flush  清空指定规则链
      -P  CHAIN       设置指定链的默认策略
      -N     自定义一条空链
      -X     删除自定义的空链
      -Z   清空计数器
      -E   重命名自定义的链
     查看类：
       -L  查看指定表中的规则
           -n  已数字形式显示地址及端口
           -v 显示详细信息 
           -x  显示精确值
           --line-number 显示规则号码
     动作：
      ACCEPT  放行
      DROP   丢弃
      REJECT 拒绝
      DNAT 目的地址转换
      SNAT 原地址转换
      REDIRECT 端口重定向       


   ICMP 互联网控制报文协议
      8 请求
      0 回应
  备注：自己可以ping 别人 INPUT 0 OUTPUT 8
        别人可以ping 自己 INPUT 8 OUTPUT 0

 保存规则
    service iptables save
        Saving firewall rules to /etc/sysconfig/iptables  
    iptables-save > /etc/sysconfig/iptables.20170519    重定向
    iptables-restore < /etc/sysconfig/iptables.20170519  恢复

***************************************************************************************
 NAT 网络地址转换

 SNAT 源地址转换
   作用于POSTROUTING
     -j SNAT --to-source
    例如：iptables -t NAT -A POSTROUTING -s 192.168.0.0/16 -j SNAT --to-source 123.2.3.2-123.2.3.5

 DNAT 目的地址转换
     -j DNAT --to-destination
    例如：iptables -t NAT -A PREROUTING -d 172.10.35.1  -p tcp --dport 80 -j DNAT --to-destination 192.168.100.1:80



































